"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/demo/page",{

/***/ "(app-pages-browser)/./src/utils/sound-effects.ts":
/*!************************************!*\
  !*** ./src/utils/sound-effects.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   playClickSound: function() { return /* binding */ playClickSound; },\n/* harmony export */   playLoseSound: function() { return /* binding */ playLoseSound; },\n/* harmony export */   playWinSound: function() { return /* binding */ playWinSound; },\n/* harmony export */   withClickSound: function() { return /* binding */ withClickSound; }\n/* harmony export */ });\n// Sound effects utility functions\n// Sound paths\nconst CLICK_SOUND_PATH = \"/assets/music/click/ES_Button Press Click, Tap, Video Game, Main Menu, Select, Positive 02 - Epidemic Sound.mp3\";\nconst LOSE_SOUND_PATH = \"/assets/music/lose/ES_Cartoon Character, Voice, Male, High Pitched, Says Uh Oh 01 - Epidemic Sound.mp3\";\n// Win sound paths based on lane reached\nconst WIN_SOUNDS = {\n    small: \"/assets/music/win/ES_Retro, Star, Win, Gain x3 - Epidemic Sound.mp3\",\n    medium: \"/assets/music/win/ES_Retro, Star, Win, Gain x6 - Epidemic Sound.mp3\",\n    large: \"/assets/music/win/ES_Retro, Star, Win, Gain x9 - Epidemic Sound.mp3\",\n    jackpot: \"/assets/music/win/ES_Retro, Star, Win, Gain, Many - Epidemic Sound.mp3\" // Final lanes (9+)\n};\n// Cache the audio instances to avoid creating multiple instances\nlet clickSound = null;\nlet loseSound = null;\nlet winSounds = {\n    small: null,\n    medium: null,\n    large: null,\n    jackpot: null\n};\n/**\n * Play the button click sound\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.5\n */ const playClickSound = function() {\n    let volume = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.5;\n    try {\n        // Create the audio instance if it doesn't exist\n        if (!clickSound) {\n            clickSound = new Audio(CLICK_SOUND_PATH);\n        }\n        // Set the volume\n        clickSound.volume = volume;\n        // Reset the audio to the beginning if it's already playing\n        clickSound.currentTime = 0;\n        // Play the sound\n        clickSound.play().catch((error)=>{\n            console.error(\"Error playing click sound:\", error);\n        });\n    } catch (error) {\n        console.error(\"Error initializing click sound:\", error);\n    }\n};\n/**\n * Create a click handler that plays a sound and then executes the provided function\n * @param handler The function to execute after playing the sound\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.5\n * @returns A new function that plays the sound and then executes the handler\n */ const withClickSound = function(handler) {\n    let volume = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.5;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        playClickSound(volume);\n        return handler(...args);\n    };\n};\n/**\n * Play a win sound based on the lane reached\n * @param lane The lane number reached (1-10)\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.7\n */ /**\n * Play the lose sound effect\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.7\n */ const playLoseSound = function() {\n    let volume = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.7;\n    try {\n        // Create the audio instance if it doesn't exist\n        if (!loseSound) {\n            loseSound = new Audio(LOSE_SOUND_PATH);\n        }\n        // Set the volume\n        loseSound.volume = volume;\n        // Reset the audio to the beginning if it's already playing\n        loseSound.currentTime = 0;\n        // Play the sound\n        loseSound.play().catch((error)=>{\n            console.error(\"Error playing lose sound:\", error);\n        });\n    } catch (error) {\n        console.error(\"Error initializing lose sound:\", error);\n    }\n};\n/**\n * Play a win sound based on the lane reached\n * @param lane The lane number reached (1-10)\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.7\n */ const playWinSound = function(lane) {\n    let volume = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.7;\n    try {\n        // Determine which win sound to play based on the lane reached\n        let soundType;\n        if (lane <= 3) {\n            soundType = \"small\";\n        } else if (lane <= 6) {\n            soundType = \"medium\";\n        } else if (lane <= 9) {\n            soundType = \"large\";\n        } else {\n            soundType = \"jackpot\";\n        }\n        // Create the audio instance if it doesn't exist\n        if (!winSounds[soundType]) {\n            winSounds[soundType] = new Audio(WIN_SOUNDS[soundType]);\n        }\n        // Set the volume\n        if (winSounds[soundType]) {\n            winSounds[soundType].volume = volume;\n            // Reset the audio to the beginning if it's already playing\n            winSounds[soundType].currentTime = 0;\n            // Play the sound\n            winSounds[soundType].play().catch((error)=>{\n                console.error(\"Error playing \".concat(soundType, \" win sound:\"), error);\n            });\n        }\n    } catch (error) {\n        console.error(\"Error playing win sound:\", error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zb3VuZC1lZmZlY3RzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxrQ0FBa0M7QUFFbEMsY0FBYztBQUNkLE1BQU1BLG1CQUFtQjtBQUN6QixNQUFNQyxrQkFBa0I7QUFFeEIsd0NBQXdDO0FBQ3hDLE1BQU1DLGFBQWE7SUFDakJDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFNBQVMseUVBQXlFLG1CQUFtQjtBQUN2RztBQUVBLGlFQUFpRTtBQUNqRSxJQUFJQyxhQUFzQztBQUMxQyxJQUFJQyxZQUFxQztBQUN6QyxJQUFJQyxZQUFzRTtJQUN4RU4sT0FBTztJQUNQQyxRQUFRO0lBQ1JDLE9BQU87SUFDUEMsU0FBUztBQUNYO0FBRUE7OztDQUdDLEdBQ00sTUFBTUksaUJBQWlCO1FBQUNDLDBFQUFpQjtJQUM5QyxJQUFJO1FBQ0YsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQ0osWUFBWTtZQUNmQSxhQUFhLElBQUlLLE1BQU1aO1FBQ3pCO1FBRUEsaUJBQWlCO1FBQ2pCTyxXQUFXSSxNQUFNLEdBQUdBO1FBRXBCLDJEQUEyRDtRQUMzREosV0FBV00sV0FBVyxHQUFHO1FBRXpCLGlCQUFpQjtRQUNqQk4sV0FBV08sSUFBSSxHQUFHQyxLQUFLLENBQUNDLENBQUFBO1lBQ3RCQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM5QztJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUNBQW1DQTtJQUNuRDtBQUNGLEVBQUU7QUFFRjs7Ozs7Q0FLQyxHQUNNLE1BQU1FLGlCQUFpQixTQUM1QkM7UUFDQVIsMEVBQWlCO0lBRWpCLE9BQU87eUNBQUlTO1lBQUFBOztRQUNUVixlQUFlQztRQUNmLE9BQU9RLFdBQVdDO0lBQ3BCO0FBQ0YsRUFBRTtBQUVGOzs7O0NBSUMsR0FDRDs7O0NBR0MsR0FDTSxNQUFNQyxnQkFBZ0I7UUFBQ1YsMEVBQWlCO0lBQzdDLElBQUk7UUFDRixnREFBZ0Q7UUFDaEQsSUFBSSxDQUFDSCxXQUFXO1lBQ2RBLFlBQVksSUFBSUksTUFBTVg7UUFDeEI7UUFFQSxpQkFBaUI7UUFDakJPLFVBQVVHLE1BQU0sR0FBR0E7UUFFbkIsMkRBQTJEO1FBQzNESCxVQUFVSyxXQUFXLEdBQUc7UUFFeEIsaUJBQWlCO1FBQ2pCTCxVQUFVTSxJQUFJLEdBQUdDLEtBQUssQ0FBQ0MsQ0FBQUE7WUFDckJDLFFBQVFELEtBQUssQ0FBQyw2QkFBNkJBO1FBQzdDO0lBQ0YsRUFBRSxPQUFPQSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO0lBQ2xEO0FBQ0YsRUFBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNTSxlQUFlLFNBQUNDO1FBQWNaLDBFQUFpQjtJQUMxRCxJQUFJO1FBQ0YsOERBQThEO1FBQzlELElBQUlhO1FBRUosSUFBSUQsUUFBUSxHQUFHO1lBQ2JDLFlBQVk7UUFDZCxPQUFPLElBQUlELFFBQVEsR0FBRztZQUNwQkMsWUFBWTtRQUNkLE9BQU8sSUFBSUQsUUFBUSxHQUFHO1lBQ3BCQyxZQUFZO1FBQ2QsT0FBTztZQUNMQSxZQUFZO1FBQ2Q7UUFFQSxnREFBZ0Q7UUFDaEQsSUFBSSxDQUFDZixTQUFTLENBQUNlLFVBQVUsRUFBRTtZQUN6QmYsU0FBUyxDQUFDZSxVQUFVLEdBQUcsSUFBSVosTUFBTVYsVUFBVSxDQUFDc0IsVUFBVTtRQUN4RDtRQUVBLGlCQUFpQjtRQUNqQixJQUFJZixTQUFTLENBQUNlLFVBQVUsRUFBRTtZQUN4QmYsU0FBUyxDQUFDZSxVQUFVLENBQUViLE1BQU0sR0FBR0E7WUFFL0IsMkRBQTJEO1lBQzNERixTQUFTLENBQUNlLFVBQVUsQ0FBRVgsV0FBVyxHQUFHO1lBRXBDLGlCQUFpQjtZQUNqQkosU0FBUyxDQUFDZSxVQUFVLENBQUVWLElBQUksR0FBR0MsS0FBSyxDQUFDQyxDQUFBQTtnQkFDakNDLFFBQVFELEtBQUssQ0FBQyxpQkFBMkIsT0FBVlEsV0FBVSxnQkFBY1I7WUFDekQ7UUFDRjtJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtJQUM1QztBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL3NvdW5kLWVmZmVjdHMudHM/M2ZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTb3VuZCBlZmZlY3RzIHV0aWxpdHkgZnVuY3Rpb25zXG5cbi8vIFNvdW5kIHBhdGhzXG5jb25zdCBDTElDS19TT1VORF9QQVRIID0gJy9hc3NldHMvbXVzaWMvY2xpY2svRVNfQnV0dG9uIFByZXNzIENsaWNrLCBUYXAsIFZpZGVvIEdhbWUsIE1haW4gTWVudSwgU2VsZWN0LCBQb3NpdGl2ZSAwMiAtIEVwaWRlbWljIFNvdW5kLm1wMyc7XG5jb25zdCBMT1NFX1NPVU5EX1BBVEggPSAnL2Fzc2V0cy9tdXNpYy9sb3NlL0VTX0NhcnRvb24gQ2hhcmFjdGVyLCBWb2ljZSwgTWFsZSwgSGlnaCBQaXRjaGVkLCBTYXlzIFVoIE9oIDAxIC0gRXBpZGVtaWMgU291bmQubXAzJztcblxuLy8gV2luIHNvdW5kIHBhdGhzIGJhc2VkIG9uIGxhbmUgcmVhY2hlZFxuY29uc3QgV0lOX1NPVU5EUyA9IHtcbiAgc21hbGw6ICcvYXNzZXRzL211c2ljL3dpbi9FU19SZXRybywgU3RhciwgV2luLCBHYWluIHgzIC0gRXBpZGVtaWMgU291bmQubXAzJywgICAgLy8gTGFuZSAzIG9yIGJlbG93XG4gIG1lZGl1bTogJy9hc3NldHMvbXVzaWMvd2luL0VTX1JldHJvLCBTdGFyLCBXaW4sIEdhaW4geDYgLSBFcGlkZW1pYyBTb3VuZC5tcDMnLCAgICAvLyBMYW5lIDMrIHRvIDZcbiAgbGFyZ2U6ICcvYXNzZXRzL211c2ljL3dpbi9FU19SZXRybywgU3RhciwgV2luLCBHYWluIHg5IC0gRXBpZGVtaWMgU291bmQubXAzJywgICAgIC8vIExhbmUgNisgdG8gOVxuICBqYWNrcG90OiAnL2Fzc2V0cy9tdXNpYy93aW4vRVNfUmV0cm8sIFN0YXIsIFdpbiwgR2FpbiwgTWFueSAtIEVwaWRlbWljIFNvdW5kLm1wMycgLy8gRmluYWwgbGFuZXMgKDkrKVxufTtcblxuLy8gQ2FjaGUgdGhlIGF1ZGlvIGluc3RhbmNlcyB0byBhdm9pZCBjcmVhdGluZyBtdWx0aXBsZSBpbnN0YW5jZXNcbmxldCBjbGlja1NvdW5kOiBIVE1MQXVkaW9FbGVtZW50IHwgbnVsbCA9IG51bGw7XG5sZXQgbG9zZVNvdW5kOiBIVE1MQXVkaW9FbGVtZW50IHwgbnVsbCA9IG51bGw7XG5sZXQgd2luU291bmRzOiBSZWNvcmQ8a2V5b2YgdHlwZW9mIFdJTl9TT1VORFMsIEhUTUxBdWRpb0VsZW1lbnQgfCBudWxsPiA9IHtcbiAgc21hbGw6IG51bGwsXG4gIG1lZGl1bTogbnVsbCxcbiAgbGFyZ2U6IG51bGwsXG4gIGphY2twb3Q6IG51bGxcbn07XG5cbi8qKlxuICogUGxheSB0aGUgYnV0dG9uIGNsaWNrIHNvdW5kXG4gKiBAcGFyYW0gdm9sdW1lIE9wdGlvbmFsIHZvbHVtZSBsZXZlbCAoMC4wIHRvIDEuMCksIGRlZmF1bHRzIHRvIDAuNVxuICovXG5leHBvcnQgY29uc3QgcGxheUNsaWNrU291bmQgPSAodm9sdW1lOiBudW1iZXIgPSAwLjUpOiB2b2lkID0+IHtcbiAgdHJ5IHtcbiAgICAvLyBDcmVhdGUgdGhlIGF1ZGlvIGluc3RhbmNlIGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiAgICBpZiAoIWNsaWNrU291bmQpIHtcbiAgICAgIGNsaWNrU291bmQgPSBuZXcgQXVkaW8oQ0xJQ0tfU09VTkRfUEFUSCk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNldCB0aGUgdm9sdW1lXG4gICAgY2xpY2tTb3VuZC52b2x1bWUgPSB2b2x1bWU7XG4gICAgXG4gICAgLy8gUmVzZXQgdGhlIGF1ZGlvIHRvIHRoZSBiZWdpbm5pbmcgaWYgaXQncyBhbHJlYWR5IHBsYXlpbmdcbiAgICBjbGlja1NvdW5kLmN1cnJlbnRUaW1lID0gMDtcbiAgICBcbiAgICAvLyBQbGF5IHRoZSBzb3VuZFxuICAgIGNsaWNrU291bmQucGxheSgpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBsYXlpbmcgY2xpY2sgc291bmQ6JywgZXJyb3IpO1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBjbGljayBzb3VuZDonLCBlcnJvcik7XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgY2xpY2sgaGFuZGxlciB0aGF0IHBsYXlzIGEgc291bmQgYW5kIHRoZW4gZXhlY3V0ZXMgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uXG4gKiBAcGFyYW0gaGFuZGxlciBUaGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSBhZnRlciBwbGF5aW5nIHRoZSBzb3VuZFxuICogQHBhcmFtIHZvbHVtZSBPcHRpb25hbCB2b2x1bWUgbGV2ZWwgKDAuMCB0byAxLjApLCBkZWZhdWx0cyB0byAwLjVcbiAqIEByZXR1cm5zIEEgbmV3IGZ1bmN0aW9uIHRoYXQgcGxheXMgdGhlIHNvdW5kIGFuZCB0aGVuIGV4ZWN1dGVzIHRoZSBoYW5kbGVyXG4gKi9cbmV4cG9ydCBjb25zdCB3aXRoQ2xpY2tTb3VuZCA9IDxUIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+KFxuICBoYW5kbGVyOiBULFxuICB2b2x1bWU6IG51bWJlciA9IDAuNVxuKTogKCguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KSA9PiBSZXR1cm5UeXBlPFQ+KSA9PiB7XG4gIHJldHVybiAoLi4uYXJnczogUGFyYW1ldGVyczxUPik6IFJldHVyblR5cGU8VD4gPT4ge1xuICAgIHBsYXlDbGlja1NvdW5kKHZvbHVtZSk7XG4gICAgcmV0dXJuIGhhbmRsZXIoLi4uYXJncyk7XG4gIH07XG59O1xuXG4vKipcbiAqIFBsYXkgYSB3aW4gc291bmQgYmFzZWQgb24gdGhlIGxhbmUgcmVhY2hlZFxuICogQHBhcmFtIGxhbmUgVGhlIGxhbmUgbnVtYmVyIHJlYWNoZWQgKDEtMTApXG4gKiBAcGFyYW0gdm9sdW1lIE9wdGlvbmFsIHZvbHVtZSBsZXZlbCAoMC4wIHRvIDEuMCksIGRlZmF1bHRzIHRvIDAuN1xuICovXG4vKipcbiAqIFBsYXkgdGhlIGxvc2Ugc291bmQgZWZmZWN0XG4gKiBAcGFyYW0gdm9sdW1lIE9wdGlvbmFsIHZvbHVtZSBsZXZlbCAoMC4wIHRvIDEuMCksIGRlZmF1bHRzIHRvIDAuN1xuICovXG5leHBvcnQgY29uc3QgcGxheUxvc2VTb3VuZCA9ICh2b2x1bWU6IG51bWJlciA9IDAuNyk6IHZvaWQgPT4ge1xuICB0cnkge1xuICAgIC8vIENyZWF0ZSB0aGUgYXVkaW8gaW5zdGFuY2UgaWYgaXQgZG9lc24ndCBleGlzdFxuICAgIGlmICghbG9zZVNvdW5kKSB7XG4gICAgICBsb3NlU291bmQgPSBuZXcgQXVkaW8oTE9TRV9TT1VORF9QQVRIKTtcbiAgICB9XG4gICAgXG4gICAgLy8gU2V0IHRoZSB2b2x1bWVcbiAgICBsb3NlU291bmQudm9sdW1lID0gdm9sdW1lO1xuICAgIFxuICAgIC8vIFJlc2V0IHRoZSBhdWRpbyB0byB0aGUgYmVnaW5uaW5nIGlmIGl0J3MgYWxyZWFkeSBwbGF5aW5nXG4gICAgbG9zZVNvdW5kLmN1cnJlbnRUaW1lID0gMDtcbiAgICBcbiAgICAvLyBQbGF5IHRoZSBzb3VuZFxuICAgIGxvc2VTb3VuZC5wbGF5KCkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcGxheWluZyBsb3NlIHNvdW5kOicsIGVycm9yKTtcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbml0aWFsaXppbmcgbG9zZSBzb3VuZDonLCBlcnJvcik7XG4gIH1cbn07XG5cbi8qKlxuICogUGxheSBhIHdpbiBzb3VuZCBiYXNlZCBvbiB0aGUgbGFuZSByZWFjaGVkXG4gKiBAcGFyYW0gbGFuZSBUaGUgbGFuZSBudW1iZXIgcmVhY2hlZCAoMS0xMClcbiAqIEBwYXJhbSB2b2x1bWUgT3B0aW9uYWwgdm9sdW1lIGxldmVsICgwLjAgdG8gMS4wKSwgZGVmYXVsdHMgdG8gMC43XG4gKi9cbmV4cG9ydCBjb25zdCBwbGF5V2luU291bmQgPSAobGFuZTogbnVtYmVyLCB2b2x1bWU6IG51bWJlciA9IDAuNyk6IHZvaWQgPT4ge1xuICB0cnkge1xuICAgIC8vIERldGVybWluZSB3aGljaCB3aW4gc291bmQgdG8gcGxheSBiYXNlZCBvbiB0aGUgbGFuZSByZWFjaGVkXG4gICAgbGV0IHNvdW5kVHlwZToga2V5b2YgdHlwZW9mIFdJTl9TT1VORFM7XG4gICAgXG4gICAgaWYgKGxhbmUgPD0gMykge1xuICAgICAgc291bmRUeXBlID0gJ3NtYWxsJztcbiAgICB9IGVsc2UgaWYgKGxhbmUgPD0gNikge1xuICAgICAgc291bmRUeXBlID0gJ21lZGl1bSc7XG4gICAgfSBlbHNlIGlmIChsYW5lIDw9IDkpIHtcbiAgICAgIHNvdW5kVHlwZSA9ICdsYXJnZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNvdW5kVHlwZSA9ICdqYWNrcG90JztcbiAgICB9XG4gICAgXG4gICAgLy8gQ3JlYXRlIHRoZSBhdWRpbyBpbnN0YW5jZSBpZiBpdCBkb2Vzbid0IGV4aXN0XG4gICAgaWYgKCF3aW5Tb3VuZHNbc291bmRUeXBlXSkge1xuICAgICAgd2luU291bmRzW3NvdW5kVHlwZV0gPSBuZXcgQXVkaW8oV0lOX1NPVU5EU1tzb3VuZFR5cGVdKTtcbiAgICB9XG4gICAgXG4gICAgLy8gU2V0IHRoZSB2b2x1bWVcbiAgICBpZiAod2luU291bmRzW3NvdW5kVHlwZV0pIHtcbiAgICAgIHdpblNvdW5kc1tzb3VuZFR5cGVdIS52b2x1bWUgPSB2b2x1bWU7XG4gICAgICBcbiAgICAgIC8vIFJlc2V0IHRoZSBhdWRpbyB0byB0aGUgYmVnaW5uaW5nIGlmIGl0J3MgYWxyZWFkeSBwbGF5aW5nXG4gICAgICB3aW5Tb3VuZHNbc291bmRUeXBlXSEuY3VycmVudFRpbWUgPSAwO1xuICAgICAgXG4gICAgICAvLyBQbGF5IHRoZSBzb3VuZFxuICAgICAgd2luU291bmRzW3NvdW5kVHlwZV0hLnBsYXkoKS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIHBsYXlpbmcgJHtzb3VuZFR5cGV9IHdpbiBzb3VuZDpgLCBlcnJvcik7XG4gICAgICB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcGxheWluZyB3aW4gc291bmQ6JywgZXJyb3IpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbIkNMSUNLX1NPVU5EX1BBVEgiLCJMT1NFX1NPVU5EX1BBVEgiLCJXSU5fU09VTkRTIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsImphY2twb3QiLCJjbGlja1NvdW5kIiwibG9zZVNvdW5kIiwid2luU291bmRzIiwicGxheUNsaWNrU291bmQiLCJ2b2x1bWUiLCJBdWRpbyIsImN1cnJlbnRUaW1lIiwicGxheSIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwid2l0aENsaWNrU291bmQiLCJoYW5kbGVyIiwiYXJncyIsInBsYXlMb3NlU291bmQiLCJwbGF5V2luU291bmQiLCJsYW5lIiwic291bmRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/sound-effects.ts\n"));

/***/ })

});