"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/demo/page",{

/***/ "(app-pages-browser)/./src/utils/sound-effects.ts":
/*!************************************!*\
  !*** ./src/utils/sound-effects.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   playClickSound: function() { return /* binding */ playClickSound; },\n/* harmony export */   withClickSound: function() { return /* binding */ withClickSound; }\n/* harmony export */ });\n// Sound effects utility functions\n// Sound paths\nconst CLICK_SOUND_PATH = \"/assets/music/click/ES_Button Press Click, Tap, Video Game, Main Menu, Select, Positive 02 - Epidemic Sound.mp3\";\n// Win sound paths based on lane reached\nconst WIN_SOUNDS = {\n    small: \"/assets/music/win/ES_Retro, Star, Win, Gain x3 - Epidemic Sound.mp3\",\n    medium: \"/assets/music/win/ES_Retro, Star, Win, Gain x6 - Epidemic Sound.mp3\",\n    large: \"/assets/music/win/ES_Retro, Star, Win, Gain x9 - Epidemic Sound.mp3\",\n    jackpot: \"/assets/music/win/ES_Retro, Star, Win, Gain, Many - Epidemic Sound.mp3\" // Final lanes (9+)\n};\n// Cache the audio instances to avoid creating multiple instances\nlet clickSound = null;\nlet winSounds = {\n    small: null,\n    medium: null,\n    large: null,\n    jackpot: null\n};\n/**\n * Play the button click sound\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.5\n */ const playClickSound = function() {\n    let volume = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.5;\n    try {\n        // Create the audio instance if it doesn't exist\n        if (!clickSound) {\n            clickSound = new Audio(CLICK_SOUND_PATH);\n        }\n        // Set the volume\n        clickSound.volume = volume;\n        // Reset the audio to the beginning if it's already playing\n        clickSound.currentTime = 0;\n        // Play the sound\n        clickSound.play().catch((error)=>{\n            console.error(\"Error playing click sound:\", error);\n        });\n    } catch (error) {\n        console.error(\"Error initializing click sound:\", error);\n    }\n};\n/**\n * Create a click handler that plays a sound and then executes the provided function\n * @param handler The function to execute after playing the sound\n * @param volume Optional volume level (0.0 to 1.0), defaults to 0.5\n * @returns A new function that plays the sound and then executes the handler\n */ const withClickSound = function(handler) {\n    let volume = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.5;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        playClickSound(volume);\n        return handler(...args);\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zb3VuZC1lZmZlY3RzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0NBQWtDO0FBRWxDLGNBQWM7QUFDZCxNQUFNQSxtQkFBbUI7QUFFekIsd0NBQXdDO0FBQ3hDLE1BQU1DLGFBQWE7SUFDakJDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFNBQVMseUVBQXlFLG1CQUFtQjtBQUN2RztBQUVBLGlFQUFpRTtBQUNqRSxJQUFJQyxhQUFzQztBQUMxQyxJQUFJQyxZQUFzRTtJQUN4RUwsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLE9BQU87SUFDUEMsU0FBUztBQUNYO0FBRUE7OztDQUdDLEdBQ00sTUFBTUcsaUJBQWlCO1FBQUNDLDBFQUFpQjtJQUM5QyxJQUFJO1FBQ0YsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQ0gsWUFBWTtZQUNmQSxhQUFhLElBQUlJLE1BQU1WO1FBQ3pCO1FBRUEsaUJBQWlCO1FBQ2pCTSxXQUFXRyxNQUFNLEdBQUdBO1FBRXBCLDJEQUEyRDtRQUMzREgsV0FBV0ssV0FBVyxHQUFHO1FBRXpCLGlCQUFpQjtRQUNqQkwsV0FBV00sSUFBSSxHQUFHQyxLQUFLLENBQUNDLENBQUFBO1lBQ3RCQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM5QztJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUNBQW1DQTtJQUNuRDtBQUNGLEVBQUU7QUFFRjs7Ozs7Q0FLQyxHQUNNLE1BQU1FLGlCQUFpQixTQUM1QkM7UUFDQVIsMEVBQWlCO0lBRWpCLE9BQU87eUNBQUlTO1lBQUFBOztRQUNUVixlQUFlQztRQUNmLE9BQU9RLFdBQVdDO0lBQ3BCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdXRpbHMvc291bmQtZWZmZWN0cy50cz8zZmQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNvdW5kIGVmZmVjdHMgdXRpbGl0eSBmdW5jdGlvbnNcblxuLy8gU291bmQgcGF0aHNcbmNvbnN0IENMSUNLX1NPVU5EX1BBVEggPSAnL2Fzc2V0cy9tdXNpYy9jbGljay9FU19CdXR0b24gUHJlc3MgQ2xpY2ssIFRhcCwgVmlkZW8gR2FtZSwgTWFpbiBNZW51LCBTZWxlY3QsIFBvc2l0aXZlIDAyIC0gRXBpZGVtaWMgU291bmQubXAzJztcblxuLy8gV2luIHNvdW5kIHBhdGhzIGJhc2VkIG9uIGxhbmUgcmVhY2hlZFxuY29uc3QgV0lOX1NPVU5EUyA9IHtcbiAgc21hbGw6ICcvYXNzZXRzL211c2ljL3dpbi9FU19SZXRybywgU3RhciwgV2luLCBHYWluIHgzIC0gRXBpZGVtaWMgU291bmQubXAzJywgICAgLy8gTGFuZSAzIG9yIGJlbG93XG4gIG1lZGl1bTogJy9hc3NldHMvbXVzaWMvd2luL0VTX1JldHJvLCBTdGFyLCBXaW4sIEdhaW4geDYgLSBFcGlkZW1pYyBTb3VuZC5tcDMnLCAgICAvLyBMYW5lIDMrIHRvIDZcbiAgbGFyZ2U6ICcvYXNzZXRzL211c2ljL3dpbi9FU19SZXRybywgU3RhciwgV2luLCBHYWluIHg5IC0gRXBpZGVtaWMgU291bmQubXAzJywgICAgIC8vIExhbmUgNisgdG8gOVxuICBqYWNrcG90OiAnL2Fzc2V0cy9tdXNpYy93aW4vRVNfUmV0cm8sIFN0YXIsIFdpbiwgR2FpbiwgTWFueSAtIEVwaWRlbWljIFNvdW5kLm1wMycgLy8gRmluYWwgbGFuZXMgKDkrKVxufTtcblxuLy8gQ2FjaGUgdGhlIGF1ZGlvIGluc3RhbmNlcyB0byBhdm9pZCBjcmVhdGluZyBtdWx0aXBsZSBpbnN0YW5jZXNcbmxldCBjbGlja1NvdW5kOiBIVE1MQXVkaW9FbGVtZW50IHwgbnVsbCA9IG51bGw7XG5sZXQgd2luU291bmRzOiBSZWNvcmQ8a2V5b2YgdHlwZW9mIFdJTl9TT1VORFMsIEhUTUxBdWRpb0VsZW1lbnQgfCBudWxsPiA9IHtcbiAgc21hbGw6IG51bGwsXG4gIG1lZGl1bTogbnVsbCxcbiAgbGFyZ2U6IG51bGwsXG4gIGphY2twb3Q6IG51bGxcbn07XG5cbi8qKlxuICogUGxheSB0aGUgYnV0dG9uIGNsaWNrIHNvdW5kXG4gKiBAcGFyYW0gdm9sdW1lIE9wdGlvbmFsIHZvbHVtZSBsZXZlbCAoMC4wIHRvIDEuMCksIGRlZmF1bHRzIHRvIDAuNVxuICovXG5leHBvcnQgY29uc3QgcGxheUNsaWNrU291bmQgPSAodm9sdW1lOiBudW1iZXIgPSAwLjUpOiB2b2lkID0+IHtcbiAgdHJ5IHtcbiAgICAvLyBDcmVhdGUgdGhlIGF1ZGlvIGluc3RhbmNlIGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiAgICBpZiAoIWNsaWNrU291bmQpIHtcbiAgICAgIGNsaWNrU291bmQgPSBuZXcgQXVkaW8oQ0xJQ0tfU09VTkRfUEFUSCk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNldCB0aGUgdm9sdW1lXG4gICAgY2xpY2tTb3VuZC52b2x1bWUgPSB2b2x1bWU7XG4gICAgXG4gICAgLy8gUmVzZXQgdGhlIGF1ZGlvIHRvIHRoZSBiZWdpbm5pbmcgaWYgaXQncyBhbHJlYWR5IHBsYXlpbmdcbiAgICBjbGlja1NvdW5kLmN1cnJlbnRUaW1lID0gMDtcbiAgICBcbiAgICAvLyBQbGF5IHRoZSBzb3VuZFxuICAgIGNsaWNrU291bmQucGxheSgpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBsYXlpbmcgY2xpY2sgc291bmQ6JywgZXJyb3IpO1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBjbGljayBzb3VuZDonLCBlcnJvcik7XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgY2xpY2sgaGFuZGxlciB0aGF0IHBsYXlzIGEgc291bmQgYW5kIHRoZW4gZXhlY3V0ZXMgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uXG4gKiBAcGFyYW0gaGFuZGxlciBUaGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSBhZnRlciBwbGF5aW5nIHRoZSBzb3VuZFxuICogQHBhcmFtIHZvbHVtZSBPcHRpb25hbCB2b2x1bWUgbGV2ZWwgKDAuMCB0byAxLjApLCBkZWZhdWx0cyB0byAwLjVcbiAqIEByZXR1cm5zIEEgbmV3IGZ1bmN0aW9uIHRoYXQgcGxheXMgdGhlIHNvdW5kIGFuZCB0aGVuIGV4ZWN1dGVzIHRoZSBoYW5kbGVyXG4gKi9cbmV4cG9ydCBjb25zdCB3aXRoQ2xpY2tTb3VuZCA9IDxUIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+KFxuICBoYW5kbGVyOiBULFxuICB2b2x1bWU6IG51bWJlciA9IDAuNVxuKTogKCguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KSA9PiBSZXR1cm5UeXBlPFQ+KSA9PiB7XG4gIHJldHVybiAoLi4uYXJnczogUGFyYW1ldGVyczxUPik6IFJldHVyblR5cGU8VD4gPT4ge1xuICAgIHBsYXlDbGlja1NvdW5kKHZvbHVtZSk7XG4gICAgcmV0dXJuIGhhbmRsZXIoLi4uYXJncyk7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbIkNMSUNLX1NPVU5EX1BBVEgiLCJXSU5fU09VTkRTIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsImphY2twb3QiLCJjbGlja1NvdW5kIiwid2luU291bmRzIiwicGxheUNsaWNrU291bmQiLCJ2b2x1bWUiLCJBdWRpbyIsImN1cnJlbnRUaW1lIiwicGxheSIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwid2l0aENsaWNrU291bmQiLCJoYW5kbGVyIiwiYXJncyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/sound-effects.ts\n"));

/***/ })

});