"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/game/BlockchainGameContainer.tsx":
/*!*********************************************************!*\
  !*** ./src/components/game/BlockchainGameContainer.tsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BlockchainGameContainer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _GameDifficulty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GameDifficulty */ \"(app-pages-browser)/./src/components/game/GameDifficulty.ts\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/node_modules/@ethersproject/units/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/web3-provider.js\");\n/* harmony import */ var _constants_contracts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/constants/contracts */ \"(app-pages-browser)/./src/constants/contracts.ts\");\n/* harmony import */ var _UI_game_board__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UI/game-board */ \"(app-pages-browser)/./src/components/game/UI/game-board.tsx\");\n/* harmony import */ var _UI_game_controls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./UI/game-controls */ \"(app-pages-browser)/./src/components/game/UI/game-controls.tsx\");\n/* harmony import */ var _UI_game_header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./UI/game-header */ \"(app-pages-browser)/./src/components/game/UI/game-header.tsx\");\n/* harmony import */ var _UI_game_over_message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./UI/game-over-message */ \"(app-pages-browser)/./src/components/game/UI/game-over-message.tsx\");\n/* harmony import */ var _UI_music_player__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UI/music-player */ \"(app-pages-browser)/./src/components/game/UI/music-player.tsx\");\n/* harmony import */ var _BaseGameLogic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./BaseGameLogic */ \"(app-pages-browser)/./src/components/game/BaseGameLogic.tsx\");\n/* harmony import */ var _contracts_abis_game_abi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../contracts/abis/game-abi */ \"(app-pages-browser)/./src/contracts/abis/game-abi.ts\");\n/* harmony import */ var _contracts_abis_token_abi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../contracts/abis/token-abi */ \"(app-pages-browser)/./src/contracts/abis/token-abi.ts\");\n/* harmony import */ var _app_navbar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/app/navbar */ \"(app-pages-browser)/./src/app/navbar.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction BlockchainGameContainer() {\n    _s();\n    // We'll use direct MetaMask connection instead of wagmi\n    // State to track if we're connecting\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [metaMaskAccount, setMetaMaskAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [metaMaskProvider, setMetaMaskProvider] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [metaMaskBalance, setMetaMaskBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"0\");\n    // Use the shared base game logic\n    const { gameState, setGameState, winTriggeredRef, autoWalkTimerRef, collisionCheckInProgressRef, fatalLane, setFatalLane, fatalLaneRef, resetGame, selectLane, handleBetChange, handleDifficultyChange, endGameWithLoss, getDifficultySettings } = (0,_BaseGameLogic__WEBPACK_IMPORTED_MODULE_9__[\"default\"])();\n    // State to store the last game result from blockchain\n    const [lastGameResult, setLastGameResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // State to track if we're loading the game result\n    const [isLoadingResult, setIsLoadingResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Update balance from MetaMask\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (metaMaskAccount && metaMaskBalance) {\n            setGameState((prev)=>({\n                    ...prev,\n                    balance: parseFloat(metaMaskBalance)\n                }));\n        }\n    }, [\n        metaMaskAccount,\n        metaMaskBalance,\n        setGameState\n    ]);\n    // Clean up auto-walk timer when component unmounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        return ()=>{\n            if (autoWalkTimerRef.current) {\n                clearInterval(autoWalkTimerRef.current);\n                autoWalkTimerRef.current = null;\n            }\n        };\n    }, [\n        autoWalkTimerRef\n    ]);\n    // Handle successful MetaMask connection\n    const handleMetaMaskConnect = async (account, provider)=>{\n        setMetaMaskAccount(account);\n        setMetaMaskProvider(provider);\n        try {\n            // Get token balance\n            const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_13__.Contract(_constants_contracts__WEBPACK_IMPORTED_MODULE_3__.TOKEN_ADDRESS, _contracts_abis_token_abi__WEBPACK_IMPORTED_MODULE_11__.tokenAbi, provider);\n            const balance = await tokenContract.balanceOf(account);\n            const formattedBalance = ethers__WEBPACK_IMPORTED_MODULE_14__.formatEther(balance);\n            setMetaMaskBalance(formattedBalance);\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Connected to MetaMask successfully!\",\n                    balance: parseFloat(formattedBalance)\n                }));\n        } catch (error) {\n            console.error(\"Error getting token balance:\", error);\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Connected to MetaMask, but failed to get token balance.\"\n                }));\n        }\n    };\n    // Handle MetaMask connection error\n    const handleMetaMaskError = (error)=>{\n        console.error(\"MetaMask connection error:\", error);\n        setGameState((prev)=>({\n                ...prev,\n                message: \"Failed to connect to MetaMask: \".concat(error.message)\n            }));\n    };\n    // Function to fetch the last game result from the blockchain\n    const fetchLastGameResult = async ()=>{\n        if (!window.ethereum) {\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"MetaMask not installed\"\n                }));\n            return null;\n        }\n        // Use MetaMask account or try to get directly\n        let playerAddress = metaMaskAccount;\n        console.log(\"Using player address:\", playerAddress);\n        if (!playerAddress) {\n            try {\n                // Try to get accounts directly from ethereum provider\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_15__.Web3Provider(window.ethereum);\n                const accounts = await provider.listAccounts();\n                playerAddress = accounts[0];\n                console.log(\"Got address from provider:\", playerAddress);\n                if (!playerAddress) {\n                    setGameState((prev)=>({\n                            ...prev,\n                            message: \"Please connect your wallet first\"\n                        }));\n                    return null;\n                }\n            } catch (error) {\n                console.error(\"Error getting accounts:\", error);\n                setGameState((prev)=>({\n                        ...prev,\n                        message: \"Please connect your wallet first\"\n                    }));\n                return null;\n            }\n        }\n        try {\n            setIsLoadingResult(true);\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Fetching last game result from blockchain...\"\n                }));\n            // Create provider and contract instances\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_15__.Web3Provider(window.ethereum);\n            const gameContract = new ethers__WEBPACK_IMPORTED_MODULE_13__.Contract(_constants_contracts__WEBPACK_IMPORTED_MODULE_3__.GAME_ADDRESS, _contracts_abis_game_abi__WEBPACK_IMPORTED_MODULE_10__.gameAbi, provider);\n            console.log(\"Game contract address:\", _constants_contracts__WEBPACK_IMPORTED_MODULE_3__.GAME_ADDRESS);\n            console.log(\"Calling getLastGameResult for address:\", playerAddress);\n            // Use only getLastGameResult function\n            let result;\n            try {\n                // Get the game result using the tuple-based function\n                const tupleResult = await gameContract.getLastGameResult(playerAddress);\n                console.log(\"getLastGameResult tuple result:\", tupleResult);\n                // Convert tuple result to the expected format\n                result = {\n                    difficulty: Number(tupleResult[0]),\n                    success: tupleResult[1],\n                    lanesBet: Number(tupleResult[2]),\n                    lanesCrossed: Number(tupleResult[3]),\n                    payout: tupleResult[4].toString(),\n                    baseSeed: tupleResult[5].toString(),\n                    result: tupleResult[6] // Seventh element should be result string\n                };\n                console.log(\"Converted tuple result:\", result);\n            } catch (error) {\n                console.error(\"getLastGameResult failed:\", error);\n                // Try a static call as fallback\n                try {\n                    console.log(\"Trying static call as fallback...\");\n                    const signer = provider.getSigner();\n                    const contractWithSigner = gameContract.connect(signer);\n                    const staticTupleResult = await contractWithSigner.callStatic.getLastGameResult(playerAddress);\n                    console.log(\"Static call tuple result:\", staticTupleResult);\n                    // Convert tuple result from static call\n                    result = {\n                        difficulty: Number(staticTupleResult[0]),\n                        success: staticTupleResult[1],\n                        lanesBet: Number(staticTupleResult[2]),\n                        lanesCrossed: Number(staticTupleResult[3]),\n                        payout: staticTupleResult[4].toString(),\n                        baseSeed: staticTupleResult[5].toString(),\n                        result: staticTupleResult[6]\n                    };\n                } catch (staticCallError) {\n                    console.error(\"Static call also failed:\", staticCallError);\n                    throw error; // Re-throw the original error if the fallback also fails\n                }\n            }\n            // If we got here, we have a result\n            if (!result) {\n                throw new Error(\"No result returned from blockchain\");\n            }\n            // Format the result\n            const formattedResult = {\n                difficulty: Number(result.difficulty),\n                success: result.success,\n                lanesBet: Number(result.lanesBet),\n                lanesCrossed: Number(result.lanesCrossed),\n                payout: ethers__WEBPACK_IMPORTED_MODULE_14__.formatEther(result.payout),\n                baseSeed: result.baseSeed.toString(),\n                result: result.result\n            };\n            console.log(\"Formatted game result:\", formattedResult);\n            setLastGameResult(formattedResult);\n            // Map difficulty number to string for display\n            const difficultyNames = [\n                \"Easy\",\n                \"Medium\",\n                \"Hard\",\n                \"Daredevil\"\n            ];\n            const difficultyName = difficultyNames[formattedResult.difficulty] || \"Unknown\";\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Last game result: \".concat(formattedResult.success ? \"Win\" : \"Loss\", \", Difficulty: \").concat(difficultyName, \", Lanes crossed: \").concat(formattedResult.lanesCrossed)\n                }));\n            return formattedResult;\n        } catch (error) {\n            console.error(\"Error fetching last game result:\", error);\n            // More detailed error message\n            let errorMsg = \"Error fetching last game result. \";\n            if (error instanceof Error) {\n                if (error.message.includes(\"call revert exception\")) {\n                    errorMsg += \"The contract call was reverted. This might happen if you haven't played a game yet with this wallet.\";\n                } else if (error.message.includes(\"Failed to initialize request\")) {\n                    errorMsg += \"RPC connection error. This is a known issue with the Abstract AGW library.\";\n                } else {\n                    errorMsg += error.message;\n                }\n            }\n            setGameState((prev)=>({\n                    ...prev,\n                    message: errorMsg\n                }));\n            return null;\n        } finally{\n            setIsLoadingResult(false);\n        }\n    };\n    // Function to play the game animation based on the blockchain result\n    const playGameAnimation = (result)=>{\n        // Reset game state first\n        resetGame();\n        // Set the difficulty from the blockchain result\n        const difficultyMap = [\n            \"easy\",\n            \"medium\",\n            \"hard\",\n            \"daredevil\" // 3 = DAREDEVIL\n        ];\n        // Ensure result exists and has a valid difficulty property\n        // If difficulty is undefined or out of range, use the current difficulty from game state\n        const difficulty = result && result.difficulty !== undefined && difficultyMap[result.difficulty] ? difficultyMap[result.difficulty] : gameState.currentDifficulty;\n        // Set the target lane from the blockchain result\n        const targetLane = result ? result.lanesBet : gameState.targetLane;\n        // Update game state with blockchain data\n        setGameState((prev)=>({\n                ...prev,\n                currentDifficulty: difficulty,\n                targetLane: targetLane,\n                laneSelected: true,\n                gameActive: true,\n                multiplier: getDifficultySettings(difficulty).startMultiplier,\n                message: \"Replaying last blockchain game...\"\n            }));\n        // Clear any existing timer\n        if (autoWalkTimerRef.current) {\n            clearInterval(autoWalkTimerRef.current);\n        }\n        // Reset collision check flag\n        collisionCheckInProgressRef.current = false;\n        // The max lane to reach is the lanes crossed from the blockchain result\n        const maxLaneToReach = result ? result.lanesCrossed : gameState.currentLane;\n        // Set up a timer to automatically move the player forward\n        autoWalkTimerRef.current = setInterval(()=>{\n            // Skip this interval if a collision check is already in progress or game is over\n            if (collisionCheckInProgressRef.current || gameState.isGameOver) {\n                return;\n            }\n            setGameState((prev)=>{\n                // If game is not active or already at target lane, stop walking\n                if (!prev.gameActive || prev.isGameOver) {\n                    if (autoWalkTimerRef.current) {\n                        clearInterval(autoWalkTimerRef.current);\n                        autoWalkTimerRef.current = null;\n                    }\n                    return prev;\n                }\n                // If we've reached the max lane to reach, end the game appropriately\n                if (prev.currentLane === maxLaneToReach) {\n                    if (autoWalkTimerRef.current) {\n                        clearInterval(autoWalkTimerRef.current);\n                        autoWalkTimerRef.current = null;\n                    }\n                    if (result && result.success) {\n                        // We'll update the game state to show win\n                        setTimeout(()=>{\n                            setGameState((prevState)=>({\n                                    ...prevState,\n                                    gameActive: false,\n                                    isGameOver: true,\n                                    isWin: true,\n                                    winAmount: parseFloat(result.payout),\n                                    message: \"You won \".concat(Math.floor(parseFloat(result.payout)).toLocaleString(), \" GPH!\")\n                                }));\n                        }, 500);\n                    } else {\n                        // End game with accident based on blockchain result\n                        setTimeout(()=>{\n                            endGameWithLoss(\"Game over: \".concat(result && result.result, \" (Blockchain result)\"), \"vehicle\");\n                        }, 500);\n                    }\n                    return prev;\n                }\n                // Move to the next lane if we haven't reached the max lane yet\n                const nextLane = prev.currentLane + 1;\n                // Don't go beyond the max lane to reach\n                if (nextLane > maxLaneToReach) {\n                    return prev;\n                }\n                // Update passed lanes\n                const newPassedLanes = [\n                    ...prev.passedLanes\n                ];\n                if (!newPassedLanes.includes(nextLane)) {\n                    newPassedLanes.push(nextLane);\n                }\n                // Update multiplier based on new lane\n                const settings = getDifficultySettings(prev.currentDifficulty);\n                const newMultiplier = settings.laneMultipliers[nextLane - 1] || settings.laneMultipliers[settings.laneMultipliers.length - 1];\n                // Pause on current lane to show animations\n                const checkLaneSequence = async ()=>{\n                    // Set flag to indicate a collision check is in progress\n                    collisionCheckInProgressRef.current = true;\n                    try {\n                        // First pause on the current lane (0.5 seconds)\n                        await new Promise((resolve)=>setTimeout(resolve, 500));\n                        // Skip if game is already over\n                        if (gameState.isGameOver) {\n                            return;\n                        }\n                        // Update the game state to move to the next lane\n                        setGameState((prev)=>({\n                                ...prev,\n                                currentLane: nextLane,\n                                multiplier: newMultiplier\n                            }));\n                    } finally{\n                        // Reset flag when done, regardless of outcome\n                        collisionCheckInProgressRef.current = false;\n                    }\n                };\n                // Start the lane sequence\n                checkLaneSequence();\n                return {\n                    ...prev,\n                    passedLanes: newPassedLanes\n                };\n            });\n        }, 500); // Move every 0.5 seconds to match walking animation\n    };\n    // Function to start a new game on the blockchain\n    const startGame = async ()=>{\n        if ( false || !window.ethereum) {\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"MetaMask not installed\"\n                }));\n            return;\n        }\n        // Check if we have a MetaMask connection\n        if (!metaMaskAccount || !metaMaskProvider) {\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Please connect your wallet using the Connect button\"\n                }));\n            return;\n        }\n        // Use the MetaMask account\n        const playerAddress = metaMaskAccount;\n        // Require lane selection before starting\n        if (gameState.targetLane <= 0) {\n            alert(\"Please select a lane to bet on\");\n            return;\n        }\n        try {\n            // Show loading message to the user\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Submitting transaction to blockchain...\"\n                }));\n            // Convert bet amount to token units (18 decimals)\n            const betAmountInTokenUnits = ethers__WEBPACK_IMPORTED_MODULE_14__.parseEther(gameState.betAmount.toString());\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Approving tokens...\"\n                }));\n            // Approve tokens for the game\n            try {\n                // Create a provider using window.ethereum\n                // Now properly typed with our declaration file\n                if (!window.ethereum) {\n                    throw new Error(\"MetaMask not installed\");\n                }\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_15__.Web3Provider(window.ethereum);\n                const signer = provider.getSigner();\n                const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_13__.Contract(_constants_contracts__WEBPACK_IMPORTED_MODULE_3__.TOKEN_ADDRESS, _contracts_abis_token_abi__WEBPACK_IMPORTED_MODULE_11__.tokenAbi, signer);\n                setGameState((prev)=>({\n                        ...prev,\n                        message: \"Approving tokens...\"\n                    }));\n                // Always approve the exact amount needed for this game\n                const approvalTx = await tokenContract.approve(_constants_contracts__WEBPACK_IMPORTED_MODULE_3__.GAME_ADDRESS, betAmountInTokenUnits);\n                // Add a delay after approval to ensure it's confirmed before proceeding\n                setGameState((prev)=>({\n                        ...prev,\n                        message: \"Waiting for approval confirmation...\"\n                    }));\n                // Wait for approval transaction to be mined\n                await approvalTx.wait();\n                console.log(\"Token approval successful for amount:\", ethers__WEBPACK_IMPORTED_MODULE_14__.formatEther(betAmountInTokenUnits));\n            } catch (approvalError) {\n                const errorMessage = approvalError instanceof Error ? approvalError.message : String(approvalError);\n                setGameState((prev)=>({\n                        ...prev,\n                        message: \"Token approval failed: \".concat(errorMessage)\n                    }));\n                throw new Error(\"Token approval failed: \".concat(errorMessage));\n            }\n            // Update message to user\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Starting game on blockchain...\"\n                }));\n            // Validate parameters before sending transaction\n            if (gameState.targetLane <= 0) {\n                const errorMsg = \"Invalid lane selection. Must select at least 1 lane.\";\n                setGameState((prev)=>({\n                        ...prev,\n                        message: errorMsg\n                    }));\n                throw new Error(errorMsg);\n            }\n            // Get difficulty settings to validate lane selection\n            const diffSettings = getDifficultySettings(gameState.currentDifficulty);\n            if (gameState.targetLane > diffSettings.totalLanes) {\n                const errorMsg = \"Invalid lane selection. Maximum lane for \".concat(gameState.currentDifficulty, \" difficulty is \").concat(diffSettings.totalLanes);\n                setGameState((prev)=>({\n                        ...prev,\n                        message: errorMsg\n                    }));\n                throw new Error(errorMsg);\n            }\n            // Ensure bet amount is positive\n            if (gameState.betAmount <= 0) {\n                const errorMsg = \"Bet amount must be greater than zero\";\n                setGameState((prev)=>({\n                        ...prev,\n                        message: errorMsg\n                    }));\n                throw new Error(errorMsg);\n            }\n            // Play the game on the blockchain\n            let txHash;\n            try {\n                // Create a provider using window.ethereum\n                // Now properly typed with our declaration file\n                if (!window.ethereum) {\n                    throw new Error(\"MetaMask not installed\");\n                }\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_15__.Web3Provider(window.ethereum);\n                const signer = provider.getSigner();\n                const gameContract = new ethers__WEBPACK_IMPORTED_MODULE_13__.Contract(_constants_contracts__WEBPACK_IMPORTED_MODULE_3__.GAME_ADDRESS, _contracts_abis_game_abi__WEBPACK_IMPORTED_MODULE_10__.gameAbi, signer);\n                // Map frontend difficulty to contract enum\n                const difficultyMap = {\n                    \"easy\": _GameDifficulty__WEBPACK_IMPORTED_MODULE_2__.GameDifficulty.EASY,\n                    \"medium\": _GameDifficulty__WEBPACK_IMPORTED_MODULE_2__.GameDifficulty.MEDIUM,\n                    \"hard\": _GameDifficulty__WEBPACK_IMPORTED_MODULE_2__.GameDifficulty.HARD,\n                    \"daredevil\": _GameDifficulty__WEBPACK_IMPORTED_MODULE_2__.GameDifficulty.DAREDEVIL // 3\n                };\n                // Make sure we're using the correct enum value (0-3) for the contract\n                const gameDifficulty = difficultyMap[gameState.currentDifficulty];\n                const tx = await gameContract.playGame(gameDifficulty, gameState.targetLane, betAmountInTokenUnits);\n                txHash = tx.hash;\n                console.log(\"Game transaction submitted:\", txHash);\n                // Wait for transaction to be mined\n                const receipt = await tx.wait();\n                console.log(\"Transaction confirmed in block:\", receipt.blockNumber);\n                // Add a small delay to allow indexing\n                await new Promise((resolve)=>setTimeout(resolve, 2000));\n                try {\n                    // Use the existing fetchLastGameResult function that's defined in this component\n                    const result = await fetchLastGameResult();\n                    if (result) {\n                        // Use the existing playGameAnimation function that's defined in this component\n                        playGameAnimation(result);\n                    }\n                } catch (resultError) {\n                    console.error(\"Error fetching or playing game result:\", resultError);\n                    setGameState((prev)=>({\n                            ...prev,\n                            message: \"Game started successfully, but couldn't fetch the result. Try refreshing.\"\n                        }));\n                }\n            } catch (txError) {\n                console.error(\"Failed to start game:\", txError);\n                // Create user-friendly error message\n                let errorMsg = \"Failed to start game\";\n                if (txError && typeof txError === \"object\" && \"message\" in txError && typeof txError.message === \"string\") {\n                    if (txError.message.includes(\"user rejected\")) {\n                        errorMsg = \"Transaction rejected by user\";\n                    } else if (txError.message.includes(\"insufficient funds\")) {\n                        errorMsg = \"Insufficient funds to start game\";\n                    } else if (txError.message.includes(\"Failed to initialize request\")) {\n                        errorMsg = \"RPC connection error. Please try again later\";\n                    } else {\n                        errorMsg = \"Transaction error: \".concat(txError.message.substring(0, 100));\n                    }\n                }\n                setGameState((prev)=>({\n                        ...prev,\n                        message: errorMsg\n                    }));\n                throw new Error(errorMsg);\n            }\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            setGameState((prev)=>({\n                    ...prev,\n                    message: \"Error: \".concat(errorMessage)\n                }));\n            alert(\"Error starting game: \".concat(errorMessage));\n        }\n    };\n    // Function to just replay the last game without starting a new one\n    const replayLastGame = async ()=>{\n        const result = await fetchLastGameResult();\n        if (result) {\n            playGameAnimation(result);\n        }\n    };\n    // Cash out is not needed for this component\n    const cashOut = async ()=>{\n        console.log(\"Cash out not needed in test game mode\");\n        return;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_navbar__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                account: metaMaskAccount,\n                onConnect: handleMetaMaskConnect,\n                onError: handleMetaMaskError\n            }, void 0, false, {\n                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                lineNumber: 627,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full flex flex-col items-center mt-6\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"w-full max-w-6xl bg-gray-900 rounded-lg shadow-lg overflow-hidden\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_game_header__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            balance: gameState.balance,\n                            isDemoMode: false\n                        }, void 0, false, {\n                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                            lineNumber: 636,\n                            columnNumber: 9\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_game_board__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    currentLane: gameState.currentLane,\n                                    difficulty: gameState.currentDifficulty,\n                                    gameActive: gameState.gameActive,\n                                    onLaneClick: selectLane,\n                                    difficultySettings: getDifficultySettings(gameState.currentDifficulty),\n                                    targetLane: gameState.targetLane,\n                                    laneSelected: gameState.laneSelected,\n                                    isGameOver: gameState.isGameOver\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                    lineNumber: 643,\n                                    columnNumber: 11\n                                }, this),\n                                gameState.isGameOver && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_game_over_message__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                    isWin: gameState.isWin,\n                                    winAmount: gameState.winAmount,\n                                    message: gameState.message,\n                                    onPlayAgain: resetGame,\n                                    accidentType: gameState.accidentType,\n                                    currentLane: gameState.isWin ? gameState.targetLane : gameState.currentLane\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                    lineNumber: 656,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                            lineNumber: 642,\n                            columnNumber: 9\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_game_controls__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            betAmount: gameState.betAmount,\n                            onBetChange: handleBetChange,\n                            onStartGame: startGame,\n                            onCashOut: cashOut,\n                            gameActive: gameState.gameActive,\n                            multiplier: gameState.multiplier,\n                            difficulty: gameState.currentDifficulty,\n                            onDifficultyChange: handleDifficultyChange,\n                            isGameOver: gameState.isGameOver,\n                            currentLane: gameState.currentLane,\n                            targetLane: gameState.targetLane,\n                            balance: gameState.balance\n                        }, void 0, false, {\n                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                            lineNumber: 668,\n                            columnNumber: 9\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-4 bg-gray-800 border-t border-gray-700 flex justify-between items-start flex-wrap\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-4 md:mb-0\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-2\",\n                                            children: \"Game Music\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                            lineNumber: 686,\n                                            columnNumber: 13\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_music_player__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                            className: \"w-full\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                            lineNumber: 687,\n                                            columnNumber: 13\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                    lineNumber: 685,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-2\",\n                                            children: \"Test Game Controls\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                            lineNumber: 692,\n                                            columnNumber: 13\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex flex-wrap gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: replayLastGame,\n                                                    disabled: isLoadingResult,\n                                                    className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                                                    children: isLoadingResult ? \"Loading...\" : \"Replay Last Game\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                    lineNumber: 694,\n                                                    columnNumber: 15\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: fetchLastGameResult,\n                                                    disabled: isLoadingResult,\n                                                    className: \"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                                                    children: isLoadingResult ? \"Loading...\" : \"Fetch Last Result\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                    lineNumber: 701,\n                                                    columnNumber: 15\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                            lineNumber: 693,\n                                            columnNumber: 13\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                    lineNumber: 691,\n                                    columnNumber: 11\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                            lineNumber: 684,\n                            columnNumber: 9\n                        }, this),\n                        lastGameResult && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-4 bg-gray-800 border-t border-gray-700\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-2 p-3 bg-gray-700 rounded\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                        className: \"font-medium mb-1\",\n                                        children: \"Last Game Result:\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                        lineNumber: 716,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                        className: \"text-sm\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Success:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 718,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    lastGameResult.success ? \"Yes\" : \"No\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 718,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Difficulty:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 719,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    [\n                                                        \"Easy\",\n                                                        \"Medium\",\n                                                        \"Hard\",\n                                                        \"Daredevil\"\n                                                    ][lastGameResult.difficulty]\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 719,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Lanes Bet:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 720,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    lastGameResult.lanesBet\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 720,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Lanes Crossed:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 721,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    lastGameResult.lanesCrossed\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 721,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Payout:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 722,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    parseFloat(lastGameResult.payout).toFixed(4),\n                                                    \" GPH\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 722,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                        children: \"Result:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                        lineNumber: 723,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    \" \",\n                                                    lastGameResult.result\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                                lineNumber: 723,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                        lineNumber: 717,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                                lineNumber: 715,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                            lineNumber: 714,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                    lineNumber: 633,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n                lineNumber: 632,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\KINO BETS\\\\kino-bet\\\\src\\\\components\\\\game\\\\BlockchainGameContainer.tsx\",\n        lineNumber: 626,\n        columnNumber: 5\n    }, this);\n}\n_s(BlockchainGameContainer, \"gLNpoaLvyceHIw2WXOBafPrKeaQ=\", false, function() {\n    return [\n        _BaseGameLogic__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n    ];\n});\n_c = BlockchainGameContainer;\nvar _c;\n$RefreshReg$(_c, \"BlockchainGameContainer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/game/BlockchainGameContainer.tsx\n"));

/***/ })

});